#define CXXTEST_HAVE_EH
#define CXXTEST_ABORT_TEST_ON_FAIL true
#include <cxxtest/TestSuite.h>
#include "sampleSheet.h"

class SampleSheetTest: public CxxTest::TestSuite {
  public:

    void testSanity(void) {
      char fn[100] = "@srcdir@/testdata/sampleSheet_regular.txt";
      SampleSheet *s;
      Index::clearStaticData();
      s = SampleSheet::load(fn,true,false);
      TS_ASSERT(s != NULL);
    }

    void testSingle(void) {
      char fn[100] = "@srcdir@/testdata/sampleSheet_oneLine.txt";
      SampleSheet *s;
      Index::clearStaticData();
      s = SampleSheet::load(fn,true,false);
      TS_ASSERT(s != NULL);
    }

    void testNoEoln(void) {
      char fn[100] = "@srcdir@/testdata/sampleSheet_noEoln.txt";
      SampleSheet *s;
      Index::clearStaticData();
      s = SampleSheet::load(fn,true,false);
      TS_ASSERT(s == NULL);
    }

    void testReverse(void) {
      char fn[100] = "@srcdir@/testdata/sampleSheet_regular.txt";
      SampleSheet *s;
      Index::clearStaticData();
      s = SampleSheet::load(fn,true,true);
      TS_ASSERT(s != NULL);
      Index* asrc = s->getIndex(0);
      Index* bsrc = s->getIndex(1);
      Index* atest = new Index("TAAGGCGA","GCGATCTA");
      Index* btest = new Index("TAAGGCGA","GCGGCCTT");
      TS_ASSERT(asrc->isMatch(*atest,0));
      TS_ASSERT(bsrc->isMatch(*btest,0));
    }
};
